# Generated by Django 2.1.5 on 2019-02-28 06:51

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import tinymce.models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('NearBeach', '0004_opportunity_connection'),
    ]

    operations = [
        migrations.CreateModel(
            name='change_task',
            fields=[
                ('change_task_id', models.AutoField(primary_key=True, serialize=False)),
                ('change_task_title', models.CharField(max_length=255)),
                ('change_task_description', tinymce.models.HTMLField(verbose_name='change_task_description')),
                ('change_task_start_date', models.DateTimeField()),
                ('change_task_end_date', models.DateTimeField()),
                ('change_task_required_by', models.CharField(default='Stakeholder(s)', max_length=255)),
                ('change_task_status', models.IntegerField(choices=[(1, 'Draft'), (2, 'Waiting for approval'), (3, 'Approved'), (4, 'Started'), (5, 'Finished')])),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.CharField(choices=[('TRUE', 'TRUE'), ('FALSE', 'FALSE')], default='FALSE', max_length=5)),
                ('change_task_assigned_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='change_assigned_user', to=settings.AUTH_USER_MODEL)),
                ('change_task_qa_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='change_qa_user', to=settings.AUTH_USER_MODEL)),
                ('change_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='change_task_change_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'change_task',
            },
        ),
        migrations.CreateModel(
            name='request_for_change',
            fields=[
                ('rfc_id', models.AutoField(primary_key=True, serialize=False)),
                ('rfc_title', models.CharField(max_length=255)),
                ('rfc_summary', tinymce.models.HTMLField(verbose_name='rfc_summary')),
                ('rfc_type', models.IntegerField(choices=[(4, 'Emergency'), (3, 'High'), (2, 'Medium'), (1, 'Low')])),
                ('rfc_implementation_start_date', models.DateTimeField()),
                ('rfc_implementation_end_date', models.DateTimeField()),
                ('rfc_implementation_release_date', models.DateTimeField()),
                ('rfc_version_number', models.CharField(blank=True, max_length=25, null=True)),
                ('rfc_status', models.IntegerField(choices=[(1, 'Draft'), (2, 'Waiting for approval'), (3, 'Approved'), (4, 'Started'), (5, 'Finished')])),
                ('rfc_priority', models.IntegerField(choices=[(4, 'Critical'), (3, 'High'), (2, 'Medium'), (1, 'Low')], default=1)),
                ('rfc_risk', models.IntegerField(choices=[(5, 'Very High'), (4, 'High'), (3, 'Moderate'), (2, 'Low'), (1, 'None')], default=1)),
                ('rfc_impact', models.IntegerField(choices=[(3, 'High'), (2, 'Medium'), (1, 'Low')], default=1)),
                ('rfc_risk_and_impact_analysis', tinymce.models.HTMLField(verbose_name='rfc_risk_and_impact_analysis')),
                ('rfc_implementation_plan', tinymce.models.HTMLField(verbose_name='rfc_implementation_plan')),
                ('rfc_backout_plan', tinymce.models.HTMLField(verbose_name='rfc_backout_plan')),
                ('rfc_test_plan', tinymce.models.HTMLField(verbose_name='rfc_test_plan')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.CharField(choices=[('TRUE', 'TRUE'), ('FALSE', 'FALSE')], default='FALSE', max_length=5)),
                ('change_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='request_for_change_change_user', to=settings.AUTH_USER_MODEL)),
                ('rfc_lead', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rfc_lead', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'request_for_change',
            },
        ),
        migrations.CreateModel(
            name='request_for_change_stakeholder',
            fields=[
                ('rfc_stakeholder_id', models.AutoField(primary_key=True, serialize=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.CharField(choices=[('TRUE', 'TRUE'), ('FALSE', 'FALSE')], default='FALSE', max_length=5)),
                ('change_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='request_for_change_stakeholder_change_user', to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='NearBeach.customer')),
                ('organisation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='NearBeach.organisation')),
                ('request_for_change', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='NearBeach.request_for_change')),
            ],
            options={
                'db_table': 'request_for_change_stakeholder',
            },
        ),
        migrations.AddField(
            model_name='folder',
            name='requirement',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='NearBeach.requirement'),
        ),
        migrations.AddField(
            model_name='permission_set',
            name='request_for_change',
            field=models.IntegerField(choices=[(0, 'No Permission'), (1, 'Read Only'), (2, 'Edit Only'), (3, 'Add and Edit'), (4, 'Full Permission')], default=0),
        ),
        migrations.AddField(
            model_name='change_task',
            name='request_for_change',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='NearBeach.request_for_change'),
        ),
        migrations.AddField(
            model_name='document_permission',
            name='request_for_change',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='NearBeach.request_for_change'),
        ),
        migrations.AddField(
            model_name='folder',
            name='request_for_change',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='NearBeach.request_for_change'),
        ),
        migrations.AddField(
            model_name='object_assignment',
            name='request_for_change',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='NearBeach.request_for_change'),
        ),
    ]
