# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2018-08-08 01:21
from __future__ import unicode_literals

import NearBeach.private_media
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import tinymce.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='assigned_users',
            fields=[
                ('assigned_users_id', models.AutoField(primary_key=True, serialize=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.CharField(choices=[('TRUE', 'TRUE'), ('FALSE', 'FALSE')], default='FALSE', max_length=5)),
                ('change_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assigned_users_change_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'assigned_users',
            },
        ),
        migrations.CreateModel(
            name='bug',
            fields=[
                ('bug_id', models.AutoField(primary_key=True, serialize=False)),
                ('bug_code', models.CharField(max_length=255)),
                ('bug_description', models.TextField()),
                ('bug_status', models.CharField(max_length=50)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.CharField(choices=[('TRUE', 'TRUE'), ('FALSE', 'FALSE')], default='FALSE', max_length=5)),
            ],
            options={
                'db_table': 'bug',
            },
        ),
        migrations.CreateModel(
            name='bug_client',
            fields=[
                ('bug_client_id', models.AutoField(primary_key=True, serialize=False)),
                ('bug_client_name', models.CharField(max_length=50)),
                ('bug_client_url', models.URLField()),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.CharField(choices=[('TRUE', 'TRUE'), ('FALSE', 'FALSE')], default='FALSE', max_length=5)),
                ('change_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bug_client_change_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'bug_client',
            },
        ),
        migrations.CreateModel(
            name='campus',
            fields=[
                ('campus_id', models.AutoField(primary_key=True, serialize=False)),
                ('campus_nickname', models.CharField(max_length=100)),
                ('campus_phone', models.CharField(max_length=11, null=True)),
                ('campus_fax', models.CharField(max_length=11, null=True)),
                ('campus_address1', models.CharField(max_length=255, null=True)),
                ('campus_address2', models.CharField(max_length=255, null=True)),
                ('campus_address3', models.CharField(max_length=255, null=True)),
                ('campus_suburb', models.CharField(max_length=50)),
                ('campus_longitude', models.DecimalField(blank=True, decimal_places=13, max_digits=16, null=True)),
                ('campus_latitude', models.DecimalField(blank=True, decimal_places=13, max_digits=16, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.CharField(choices=[('TRUE', 'TRUE'), ('FALSE', 'FALSE')], default='FALSE', max_length=5)),
            ],
            options={
                'db_table': 'campus',
            },
        ),
        migrations.CreateModel(
            name='contact_history',
            fields=[
                ('contact_history_id', models.AutoField(primary_key=True, serialize=False)),
                ('contact_date', models.DateTimeField()),
                ('contact_history', models.TextField()),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.CharField(choices=[('TRUE', 'TRUE'), ('FALSE', 'FALSE')], default='FALSE', max_length=5)),
                ('change_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contact_history_change_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'contact_history',
            },
        ),
        migrations.CreateModel(
            name='costs',
            fields=[
                ('cost_id', models.AutoField(primary_key=True, serialize=False)),
                ('cost_description', models.CharField(max_length=255)),
                ('cost_amount', models.DecimalField(decimal_places=2, max_digits=19)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.CharField(choices=[('TRUE', 'TRUE'), ('FALSE', 'FALSE')], default='FALSE', max_length=5)),
                ('change_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='costs_change_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'costs',
            },
        ),
        migrations.CreateModel(
            name='customers',
            fields=[
                ('customer_id', models.AutoField(primary_key=True, serialize=False)),
                ('customer_first_name', models.CharField(max_length=50)),
                ('customer_last_name', models.CharField(max_length=50)),
                ('customer_email', models.CharField(max_length=200)),
                ('customer_profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pictures')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.CharField(choices=[('TRUE', 'TRUE'), ('FALSE', 'FALSE')], default='FALSE', max_length=5)),
                ('change_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customers_change_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'customers',
            },
        ),
        migrations.CreateModel(
            name='customers_campus',
            fields=[
                ('customers_campus_id', models.AutoField(primary_key=True, serialize=False)),
                ('customer_phone', models.CharField(max_length=11)),
                ('customer_fax', models.CharField(max_length=11)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.CharField(choices=[('TRUE', 'TRUE'), ('FALSE', 'FALSE')], default='FALSE', max_length=5)),
                ('campus_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='NearBeach.campus')),
                ('change_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='customers_campus_change_user', to=settings.AUTH_USER_MODEL)),
                ('customer_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='NearBeach.customers')),
            ],
            options={
                'db_table': 'customers_campus',
            },
        ),
        migrations.CreateModel(
            name='document_permissions',
            fields=[
                ('document_permisssions_id', models.AutoField(primary_key=True, serialize=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.CharField(choices=[('TRUE', 'TRUE'), ('FALSE', 'FALSE')], default='FALSE', max_length=5)),
                ('change_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='document_permissions_change_user', to=settings.AUTH_USER_MODEL)),
                ('customer_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='NearBeach.customers')),
            ],
            options={
                'db_table': 'document_permissions',
            },
        ),
        migrations.CreateModel(
            name='documents',
            fields=[
                ('document_key', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('document_description', models.CharField(max_length=255)),
                ('document_url_location', models.TextField(blank=True, null=True)),
                ('document', models.FileField(blank=True, null=True, storage=NearBeach.private_media.File_Storage(), upload_to=b'')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.CharField(choices=[('TRUE', 'TRUE'), ('FALSE', 'FALSE')], default='FALSE', max_length=5)),
                ('change_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents_change_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'documents',
            },
        ),
        migrations.CreateModel(
            name='documents_folder',
            fields=[
                ('documents_folder_id', models.AutoField(primary_key=True, serialize=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.CharField(choices=[('TRUE', 'TRUE'), ('FALSE', 'FALSE')], default='FALSE', max_length=5)),
                ('change_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents_folder_change_user', to=settings.AUTH_USER_MODEL)),
                ('document_key', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='NearBeach.documents')),
            ],
            options={
                'db_table': 'documents_folder',
            },
        ),
        migrations.CreateModel(
            name='email_contact',
            fields=[
                ('email_contact_id', models.AutoField(primary_key=True, serialize=False)),
                ('is_private', models.BooleanField(default=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.CharField(choices=[('TRUE', 'TRUE'), ('FALSE', 'FALSE')], default='FALSE', max_length=5)),
                ('bcc_customers', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='email_contact_bcc_customers', to='NearBeach.customers')),
                ('cc_customers', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='email_contact_cc_customers', to='NearBeach.customers')),
                ('change_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='email_contact_change_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'email_contact',
            },
        ),
        migrations.CreateModel(
            name='email_content',
            fields=[
                ('email_content_id', models.AutoField(primary_key=True, serialize=False)),
                ('email_subject', models.CharField(max_length=255)),
                ('email_content', tinymce.models.HTMLField(verbose_name='email_content')),
                ('is_private', models.BooleanField(default=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.CharField(choices=[('TRUE', 'TRUE'), ('FALSE', 'FALSE')], default='FALSE', max_length=5)),
                ('change_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='email_content_change_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'email_content',
            },
        ),
        migrations.CreateModel(
            name='folders',
            fields=[
                ('folder_id', models.AutoField(primary_key=True, serialize=False)),
                ('folder_description', models.CharField(max_length=255)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.CharField(choices=[('TRUE', 'TRUE'), ('FALSE', 'FALSE')], default='FALSE', max_length=5)),
                ('change_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='folders_change_user', to=settings.AUTH_USER_MODEL)),
                ('parent_folder_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='NearBeach.folders')),
            ],
            options={
                'db_table': 'folder',
            },
        ),
        migrations.CreateModel(
            name='group_permissions',
            fields=[
                ('group_permissions_id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'group_permissions',
            },
        ),
        migrations.CreateModel(
            name='groups',
            fields=[
                ('group_id', models.AutoField(primary_key=True, serialize=False)),
                ('group_name', models.CharField(max_length=50, unique=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.CharField(choices=[('TRUE', 'TRUE'), ('FALSE', 'FALSE')], default='FALSE', max_length=5)),
                ('change_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='groups_change_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'groups',
            },
        ),
        migrations.CreateModel(
            name='kanban_board',
            fields=[
                ('kanban_board_id', models.AutoField(primary_key=True, serialize=False)),
                ('kanban_board_name', models.CharField(max_length=255)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.CharField(choices=[('TRUE', 'TRUE'), ('FALSE', 'FALSE')], default='FALSE', max_length=5)),
                ('change_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='kanban_board_change_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'kanban_board',
            },
        ),
        migrations.CreateModel(
            name='kanban_card',
            fields=[
                ('kanban_card_id', models.AutoField(primary_key=True, serialize=False)),
                ('kanban_card_text', models.CharField(max_length=255)),
                ('kanban_card_sort_number', models.IntegerField()),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.CharField(choices=[('TRUE', 'TRUE'), ('FALSE', 'FALSE')], default='FALSE', max_length=5)),
                ('change_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='kanban_card_change_user', to=settings.AUTH_USER_MODEL)),
                ('kanban_board', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='NearBeach.kanban_board')),
            ],
            options={
                'db_table': 'kanban_card',
            },
        ),
        migrations.CreateModel(
            name='kanban_column',
            fields=[
                ('kanban_column_id', models.AutoField(primary_key=True, serialize=False)),
                ('kanban_column_name', models.CharField(max_length=255)),
                ('kanban_column_sort_number', models.IntegerField()),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.CharField(choices=[('TRUE', 'TRUE'), ('FALSE', 'FALSE')], default='FALSE', max_length=5)),
                ('change_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='kanban_column_change_user', to=settings.AUTH_USER_MODEL)),
                ('kanban_board', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='NearBeach.kanban_board')),
            ],
            options={
                'db_table': 'kanban_column',
            },
        ),
        migrations.CreateModel(
            name='kanban_comment',
            fields=[
                ('kanban_comment_id', models.AutoField(primary_key=True, serialize=False)),
                ('kanban_comment', models.TextField()),
                ('user_infomation', models.CharField(max_length=255)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.CharField(choices=[('TRUE', 'TRUE'), ('FALSE', 'FALSE')], default='FALSE', max_length=5)),
                ('change_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='kanban_comment_change_user', to=settings.AUTH_USER_MODEL)),
                ('kanban_board', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='NearBeach.kanban_board')),
                ('kanban_card', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='NearBeach.kanban_card')),
                ('user_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'kanban_comment',
            },
        ),
        migrations.CreateModel(
            name='kanban_level',
            fields=[
                ('kanban_level_id', models.AutoField(primary_key=True, serialize=False)),
                ('kanban_level_name', models.CharField(max_length=255)),
                ('kanban_level_sort_number', models.IntegerField()),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.CharField(choices=[('TRUE', 'TRUE'), ('FALSE', 'FALSE')], default='FALSE', max_length=5)),
                ('change_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='kanban_level_change_user', to=settings.AUTH_USER_MODEL)),
                ('kanban_board', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='NearBeach.kanban_board')),
            ],
            options={
                'db_table': 'kanban_level',
            },
        ),
        migrations.CreateModel(
            name='list_of_amount_type',
            fields=[
                ('amount_type_id', models.AutoField(primary_key=True, serialize=False)),
                ('amount_type_description', models.CharField(max_length=20)),
                ('list_order', models.IntegerField(unique=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.CharField(choices=[('TRUE', 'TRUE'), ('FALSE', 'FALSE')], default='FALSE', max_length=5)),
                ('change_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='list_of_amount_type_change_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['list_order'],
                'db_table': 'list_of_amount_type',
            },
        ),
        migrations.CreateModel(
            name='list_of_bug_client',
            fields=[
                ('list_of_bug_client_id', models.AutoField(primary_key=True, serialize=False)),
                ('bug_client_name', models.CharField(max_length=50)),
                ('bug_client_api_url', models.CharField(max_length=255)),
                ('api_open_bugs', models.CharField(max_length=255)),
                ('api_search_bugs', models.CharField(max_length=255)),
                ('api_bug', models.CharField(max_length=255)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.CharField(choices=[('TRUE', 'TRUE'), ('FALSE', 'FALSE')], default='FALSE', max_length=5)),
                ('change_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='list_of_bug_client_change_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'list_of_bug_client',
            },
        ),
        migrations.CreateModel(
            name='list_of_contact_types',
            fields=[
                ('contact_type_id', models.AutoField(primary_key=True, serialize=False)),
                ('contact_type', models.CharField(max_length=50)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.CharField(choices=[('TRUE', 'TRUE'), ('FALSE', 'FALSE')], default='FALSE', max_length=5)),
                ('change_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='list_of_contact_types_change_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'list_of_contact_types',
            },
        ),
        migrations.CreateModel(
            name='list_of_countries',
            fields=[
                ('country_id', models.CharField(max_length=2, primary_key=True, serialize=False)),
                ('country_name', models.CharField(max_length=50)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.CharField(choices=[('TRUE', 'TRUE'), ('FALSE', 'FALSE')], default='FALSE', max_length=5)),
                ('change_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='list_of_countries_change_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'list_of_countries',
            },
        ),
        migrations.CreateModel(
            name='list_of_countries_regions',
            fields=[
                ('region_id', models.AutoField(primary_key=True, serialize=False)),
                ('region_name', models.CharField(max_length=150)),
                ('region_type', models.CharField(max_length=80, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.CharField(choices=[('TRUE', 'TRUE'), ('FALSE', 'FALSE')], default='FALSE', max_length=5)),
                ('change_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='list_of_countries_regions_change_user', to=settings.AUTH_USER_MODEL)),
                ('country_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='NearBeach.list_of_countries')),
            ],
            options={
                'db_table': 'list_of_countries_regions',
            },
        ),
        migrations.CreateModel(
            name='list_of_currency',
            fields=[
                ('currency_id', models.AutoField(primary_key=True, serialize=False)),
                ('currency_description', models.CharField(max_length=20)),
                ('currency_short_description', models.CharField(max_length=4)),
                ('list_order', models.IntegerField(unique=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.CharField(choices=[('TRUE', 'TRUE'), ('FALSE', 'FALSE')], default='FALSE', max_length=5)),
                ('change_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='list_of_currency_change_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'list_of_currency',
            },
        ),
        migrations.CreateModel(
            name='list_of_lead_source',
            fields=[
                ('lead_source_id', models.AutoField(primary_key=True, serialize=False)),
                ('lead_source_description', models.CharField(max_length=20)),
                ('list_order', models.IntegerField(unique=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.CharField(choices=[('TRUE', 'TRUE'), ('FALSE', 'FALSE')], default='FALSE', max_length=5)),
                ('change_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='list_of_lead_source_change_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'list_of_lead_source',
            },
        ),
        migrations.CreateModel(
            name='list_of_opportunity_stage',
            fields=[
                ('opportunity_stage_id', models.AutoField(primary_key=True, serialize=False)),
                ('opportunity_stage_description', models.CharField(max_length=50)),
                ('probability_success', models.DecimalField(decimal_places=0, max_digits=3)),
                ('list_order', models.IntegerField(unique=True)),
                ('opportunity_closed', models.CharField(choices=[('TRUE', 'TRUE'), ('FALSE', 'FALSE')], default='FALSE', max_length=5)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.CharField(choices=[('TRUE', 'TRUE'), ('FALSE', 'FALSE')], default='FALSE', max_length=5)),
                ('change_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='list_of_opportunity_stage_change_user', to=settings.AUTH_USER_MODEL)),
                ('user_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['list_order'],
                'db_table': 'list_of_opportunity_stage',
            },
        ),
        migrations.CreateModel(
            name='list_of_quote_stages',
            fields=[
                ('sort_order', models.IntegerField(auto_created=True, unique=True)),
                ('quote_stages_id', models.AutoField(primary_key=True, serialize=False)),
                ('quote_stage', models.CharField(max_length=50, unique=True)),
                ('is_invoice', models.CharField(choices=[('TRUE', 'TRUE'), ('FALSE', 'FALSE')], default='FALSE', max_length=5)),
                ('quote_closed', models.CharField(choices=[('TRUE', 'TRUE'), ('FALSE', 'FALSE')], default='FALSE', max_length=5)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.CharField(choices=[('TRUE', 'TRUE'), ('FALSE', 'FALSE')], default='FALSE', max_length=5)),
                ('change_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='list_of_quote_stages_change_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'list_of_quote_stages',
            },
        ),
        migrations.CreateModel(
            name='list_of_requirement_item_status',
            fields=[
                ('requirement_item_status_id', models.AutoField(primary_key=True, serialize=False)),
                ('requirement_item_status', models.CharField(max_length=100)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.CharField(choices=[('TRUE', 'TRUE'), ('FALSE', 'FALSE')], default='FALSE', max_length=5)),
                ('change_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='list_of_requirement_item_status_change_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'list_of_requirement_item_status',
            },
        ),
        migrations.CreateModel(
            name='list_of_requirement_item_type',
            fields=[
                ('requirement_item_type_id', models.AutoField(primary_key=True, serialize=False)),
                ('requirement_item_type', models.CharField(max_length=100)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.CharField(choices=[('TRUE', 'TRUE'), ('FALSE', 'FALSE')], default='FALSE', max_length=5)),
                ('change_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='list_of_requirement_item_type_change_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'list_of_requirement_item_type',
            },
        ),
        migrations.CreateModel(
            name='list_of_requirement_status',
            fields=[
                ('requirement_status_id', models.AutoField(primary_key=True, serialize=False)),
                ('requirement_status', models.CharField(max_length=50)),
                ('requirement_status_is_closed', models.CharField(choices=[('TRUE', 'TRUE'), ('FALSE', 'FALSE')], default='FALSE', max_length=10)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.CharField(choices=[('TRUE', 'TRUE'), ('FALSE', 'FALSE')], default='FALSE', max_length=5)),
                ('change_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='list_of_requirement_status_change_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'list_of_requirement_status',
            },
        ),
        migrations.CreateModel(
            name='list_of_requirement_type',
            fields=[
                ('requirement_type_id', models.AutoField(primary_key=True, serialize=False)),
                ('requirement_type', models.CharField(max_length=100)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.CharField(choices=[('TRUE', 'TRUE'), ('FALSE', 'FALSE')], default='FALSE', max_length=5)),
                ('change_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='list_of_requirement_type_change_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'list_of_requirement_type',
            },
        ),
        migrations.CreateModel(
            name='list_of_taxes',
            fields=[
                ('tax_id', models.AutoField(primary_key=True, serialize=False)),
                ('tax_amount', models.DecimalField(decimal_places=4, max_digits=6)),
                ('tax_description', models.CharField(blank=True, max_length=50, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.CharField(choices=[('TRUE', 'TRUE'), ('FALSE', 'FALSE')], default='FALSE', max_length=5)),
                ('change_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='list_of_taxes_change_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'list_of_taxes',
            },
        ),
        migrations.CreateModel(
            name='list_of_titles',
            fields=[
                ('title_id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=10)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.CharField(choices=[('TRUE', 'TRUE'), ('FALSE', 'FALSE')], default='FALSE', max_length=5)),
                ('change_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='list_of_titles_change_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'list_of_titles',
            },
        ),
        migrations.CreateModel(
            name='opportunity',
            fields=[
                ('opportunity_id', models.AutoField(primary_key=True, serialize=False)),
                ('opportunity_name', models.CharField(max_length=255)),
                ('opportunity_description', models.TextField()),
                ('opportunity_amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('opportunity_expected_close_date', models.DateTimeField()),
                ('opportunity_success_probability', models.IntegerField()),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.CharField(choices=[('TRUE', 'TRUE'), ('FALSE', 'FALSE')], default='FALSE', max_length=5)),
                ('amount_type_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='NearBeach.list_of_amount_type')),
                ('change_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='opportunity_change_user', to=settings.AUTH_USER_MODEL)),
                ('currency_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='NearBeach.list_of_currency')),
                ('customer_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='NearBeach.customers')),
                ('lead_source_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='NearBeach.list_of_lead_source')),
                ('opportunity_stage_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='NearBeach.list_of_opportunity_stage')),
            ],
            options={
                'db_table': 'opportunities',
            },
        ),
        migrations.CreateModel(
            name='opportunity_permissions',
            fields=[
                ('opportunity_permissions_id', models.AutoField(primary_key=True, serialize=False)),
                ('all_users', models.CharField(choices=[('TRUE', 'TRUE'), ('FALSE', 'FALSE')], default='FALSE', max_length=5)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.CharField(choices=[('TRUE', 'TRUE'), ('FALSE', 'FALSE')], default='FALSE', max_length=5)),
                ('assigned_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='opportunity_permissions_assigned_user', to=settings.AUTH_USER_MODEL)),
                ('change_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='opportunity_permissions_change_user', to=settings.AUTH_USER_MODEL)),
                ('groups_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='NearBeach.groups')),
                ('opportunity_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='NearBeach.opportunity')),
            ],
            options={
                'db_table': 'opportunity_permission',
            },
        ),
        migrations.CreateModel(
            name='organisations',
            fields=[
                ('organisations_id', models.AutoField(primary_key=True, serialize=False)),
                ('organisation_name', models.CharField(max_length=255)),
                ('organisation_website', models.CharField(max_length=50)),
                ('organisation_email', models.CharField(max_length=100)),
                ('organisation_profile_picture', models.ImageField(blank=True, null=True, upload_to=b'')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.CharField(choices=[('TRUE', 'TRUE'), ('FALSE', 'FALSE')], default='FALSE', max_length=5)),
                ('change_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='organisations_change_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'organisations',
            },
        ),
        migrations.CreateModel(
            name='permission_set',
            fields=[
                ('permission_set_id', models.AutoField(primary_key=True, serialize=False)),
                ('permission_set_name', models.CharField(max_length=255, unique=True)),
                ('administration_assign_users_to_groups', models.IntegerField(choices=[(0, 'No Permission'), (1, 'Read Only'), (2, 'Edit Only'), (3, 'Add and Edit'), (4, 'Full Permission')], default=0)),
                ('administration_create_groups', models.IntegerField(choices=[(0, 'No Permission'), (1, 'Read Only'), (2, 'Edit Only'), (3, 'Add and Edit'), (4, 'Full Permission')], default=0)),
                ('administration_create_permission_sets', models.IntegerField(choices=[(0, 'No Permission'), (1, 'Read Only'), (2, 'Edit Only'), (3, 'Add and Edit'), (4, 'Full Permission')], default=0)),
                ('administration_create_users', models.IntegerField(choices=[(0, 'No Permission'), (1, 'Read Only'), (2, 'Edit Only'), (3, 'Add and Edit'), (4, 'Full Permission')], default=0)),
                ('assign_campus_to_customer', models.IntegerField(choices=[(0, 'No Permission'), (1, 'Read Only'), (2, 'Edit Only'), (3, 'Add and Edit'), (4, 'Full Permission')], default=0)),
                ('associate_project_and_tasks', models.IntegerField(choices=[(0, 'No Permission'), (1, 'Read Only'), (2, 'Edit Only'), (3, 'Add and Edit'), (4, 'Full Permission')], default=0)),
                ('bug', models.IntegerField(choices=[(0, 'No Permission'), (1, 'Read Only'), (2, 'Edit Only'), (3, 'Add and Edit'), (4, 'Full Permission')], default=0)),
                ('bug_client', models.IntegerField(choices=[(0, 'No Permission'), (1, 'Read Only'), (2, 'Edit Only'), (3, 'Add and Edit'), (4, 'Full Permission')], default=0)),
                ('email', models.IntegerField(choices=[(0, 'No Permission'), (1, 'Read Only'), (2, 'Edit Only'), (3, 'Add and Edit'), (4, 'Full Permission')], default=0)),
                ('invoice', models.IntegerField(choices=[(0, 'No Permission'), (1, 'Read Only'), (2, 'Edit Only'), (3, 'Add and Edit'), (4, 'Full Permission')], default=0)),
                ('invoice_product', models.IntegerField(choices=[(0, 'No Permission'), (1, 'Read Only'), (2, 'Edit Only'), (3, 'Add and Edit'), (4, 'Full Permission')], default=0)),
                ('customer', models.IntegerField(choices=[(0, 'No Permission'), (1, 'Read Only'), (2, 'Edit Only'), (3, 'Add and Edit'), (4, 'Full Permission')], default=0)),
                ('kanban', models.IntegerField(choices=[(0, 'No Permission'), (1, 'Read Only'), (2, 'Edit Only'), (3, 'Add and Edit'), (4, 'Full Permission')], default=0)),
                ('kanban_card', models.IntegerField(choices=[(0, 'No Permission'), (1, 'Read Only'), (2, 'Edit Only'), (3, 'Add and Edit'), (4, 'Full Permission')], default=0)),
                ('opportunity', models.IntegerField(choices=[(0, 'No Permission'), (1, 'Read Only'), (2, 'Edit Only'), (3, 'Add and Edit'), (4, 'Full Permission')], default=0)),
                ('organisation', models.IntegerField(choices=[(0, 'No Permission'), (1, 'Read Only'), (2, 'Edit Only'), (3, 'Add and Edit'), (4, 'Full Permission')], default=0)),
                ('organisation_campus', models.IntegerField(choices=[(0, 'No Permission'), (1, 'Read Only'), (2, 'Edit Only'), (3, 'Add and Edit'), (4, 'Full Permission')], default=0)),
                ('project', models.IntegerField(choices=[(0, 'No Permission'), (1, 'Read Only'), (2, 'Edit Only'), (3, 'Add and Edit'), (4, 'Full Permission')], default=0)),
                ('quote', models.IntegerField(choices=[(0, 'No Permission'), (1, 'Read Only'), (2, 'Edit Only'), (3, 'Add and Edit'), (4, 'Full Permission')], default=0)),
                ('requirement', models.IntegerField(choices=[(0, 'No Permission'), (1, 'Read Only'), (2, 'Edit Only'), (3, 'Add and Edit'), (4, 'Full Permission')], default=0)),
                ('requirement_link', models.IntegerField(choices=[(0, 'No Permission'), (1, 'Read Only'), (2, 'Edit Only'), (3, 'Add and Edit'), (4, 'Full Permission')], default=0)),
                ('task', models.IntegerField(choices=[(0, 'No Permission'), (1, 'Read Only'), (2, 'Edit Only'), (3, 'Add and Edit'), (4, 'Full Permission')], default=0)),
                ('tax', models.IntegerField(choices=[(0, 'No Permission'), (1, 'Read Only'), (2, 'Edit Only'), (3, 'Add and Edit'), (4, 'Full Permission')], default=0)),
                ('template', models.IntegerField(choices=[(0, 'No Permission'), (1, 'Read Only'), (2, 'Edit Only'), (3, 'Add and Edit'), (4, 'Full Permission')], default=0)),
                ('documents', models.IntegerField(choices=[(0, 'No Permission'), (1, 'Has Permission')], default=0)),
                ('contact_history', models.IntegerField(choices=[(0, 'No Permission'), (1, 'Has Permission')], default=0)),
                ('kanban_comment', models.IntegerField(choices=[(0, 'No Permission'), (1, 'Has Permission')], default=0)),
                ('project_history', models.IntegerField(choices=[(0, 'No Permission'), (1, 'Has Permission')], default=0)),
                ('task_history', models.IntegerField(choices=[(0, 'No Permission'), (1, 'Has Permission')], default=0)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.CharField(choices=[('TRUE', 'TRUE'), ('FALSE', 'FALSE')], default='FALSE', max_length=5)),
                ('change_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='permission_set_change_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'permission_set',
            },
        ),
        migrations.CreateModel(
            name='products_and_services',
            fields=[
                ('product_id', models.AutoField(primary_key=True, serialize=False)),
                ('product_or_service', models.CharField(choices=[('Product', 'Product'), ('Service', 'Service')], max_length=7)),
                ('product_name', models.CharField(max_length=100, unique=True)),
                ('product_part_number', models.CharField(blank=True, max_length=100, null=True)),
                ('product_cost', models.DecimalField(decimal_places=2, max_digits=19)),
                ('product_price', models.DecimalField(decimal_places=2, max_digits=19)),
                ('product_description', models.TextField(blank=True, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.CharField(choices=[('TRUE', 'TRUE'), ('FALSE', 'FALSE')], default='FALSE', max_length=5)),
                ('change_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products_and_services_change_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'products_and_services',
            },
        ),
        migrations.CreateModel(
            name='project',
            fields=[
                ('project_id', models.AutoField(primary_key=True, serialize=False)),
                ('project_name', models.CharField(max_length=255)),
                ('project_description', tinymce.models.HTMLField(verbose_name='project_description')),
                ('project_start_date', models.DateTimeField()),
                ('project_end_date', models.DateTimeField()),
                ('project_status', models.CharField(choices=[('New', 'New'), ('Open', 'Open'), ('Resolved', 'Resolved'), ('Closed', 'Closed')], default='New', max_length=15)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.CharField(choices=[('TRUE', 'TRUE'), ('FALSE', 'FALSE')], default='FALSE', max_length=5)),
                ('change_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_change_user', to=settings.AUTH_USER_MODEL)),
                ('customers', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='NearBeach.customers')),
                ('organisations_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='NearBeach.organisations')),
            ],
            options={
                'db_table': 'project',
            },
        ),
        migrations.CreateModel(
            name='project_customers',
            fields=[
                ('project_customers_id', models.AutoField(primary_key=True, serialize=False)),
                ('customer_description', models.CharField(blank=True, max_length=255, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.CharField(choices=[('TRUE', 'TRUE'), ('FALSE', 'FALSE')], default='FALSE', max_length=5)),
                ('change_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_customers_change_user', to=settings.AUTH_USER_MODEL)),
                ('customer_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='NearBeach.customers')),
                ('project_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='NearBeach.project')),
            ],
            options={
                'db_table': 'project_customers',
            },
        ),
        migrations.CreateModel(
            name='project_groups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.CharField(choices=[('TRUE', 'TRUE'), ('FALSE', 'FALSE')], default='FALSE', max_length=5)),
                ('change_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_groups_change_user', to=settings.AUTH_USER_MODEL)),
                ('groups_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='NearBeach.groups')),
                ('project_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='NearBeach.project')),
            ],
            options={
                'db_table': 'project_groups',
            },
        ),
        migrations.CreateModel(
            name='project_history',
            fields=[
                ('project_history_id', models.AutoField(primary_key=True, serialize=False)),
                ('user_infomation', models.CharField(max_length=255)),
                ('project_history', tinymce.models.HTMLField(verbose_name='project_history')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.CharField(choices=[('TRUE', 'TRUE'), ('FALSE', 'FALSE')], default='FALSE', max_length=5)),
                ('change_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_history_change_user', to=settings.AUTH_USER_MODEL)),
                ('project_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='NearBeach.project')),
                ('user_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'project_history',
            },
        ),
        migrations.CreateModel(
            name='project_opportunity',
            fields=[
                ('project_opprtunity_id', models.AutoField(primary_key=True, serialize=False)),
                ('opportunity_description', models.CharField(blank=True, max_length=255, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.CharField(choices=[('TRUE', 'TRUE'), ('FALSE', 'FALSE')], default='FALSE', max_length=5)),
                ('change_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_opportunity_change_user', to=settings.AUTH_USER_MODEL)),
                ('opportunity_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='NearBeach.opportunity')),
                ('project_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='NearBeach.project')),
            ],
            options={
                'db_table': 'project_opportunity',
            },
        ),
        migrations.CreateModel(
            name='project_stages',
            fields=[
                ('project_stages_id', models.AutoField(primary_key=True, serialize=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.CharField(choices=[('TRUE', 'TRUE'), ('FALSE', 'FALSE')], default='FALSE', max_length=5)),
                ('change_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_stages_change_user', to=settings.AUTH_USER_MODEL)),
                ('project_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='NearBeach.project')),
            ],
            options={
                'db_table': 'project_stages',
            },
        ),
        migrations.CreateModel(
            name='project_tasks',
            fields=[
                ('project_tasks_id', models.AutoField(primary_key=True, serialize=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.CharField(choices=[('TRUE', 'TRUE'), ('FALSE', 'FALSE')], default='FALSE', max_length=5)),
                ('change_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_tasks_change_user', to=settings.AUTH_USER_MODEL)),
                ('project_id', models.ForeignKey(db_column='project_id', on_delete=django.db.models.deletion.CASCADE, to='NearBeach.project')),
            ],
            options={
                'db_table': 'project_tasks',
            },
        ),
        migrations.CreateModel(
            name='quote_responsible_customers',
            fields=[
                ('quote_responsible_customers_id', models.AutoField(primary_key=True, serialize=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.CharField(choices=[('TRUE', 'TRUE'), ('FALSE', 'FALSE')], default='FALSE', max_length=5)),
                ('change_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quote_responsible_customers_change_user', to=settings.AUTH_USER_MODEL)),
                ('customer_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='NearBeach.customers')),
            ],
            options={
                'db_table': 'quote_responsible_customers',
            },
        ),
        migrations.CreateModel(
            name='quote_template',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('header', tinymce.models.HTMLField(blank=True, null=True)),
                ('company_letter_head', tinymce.models.HTMLField(blank=True, null=True)),
                ('payment_terms', models.CharField(blank=True, max_length=255, null=True)),
                ('notes', models.CharField(blank=True, max_length=255, null=True)),
                ('organisation_details', tinymce.models.HTMLField(blank=True, null=True)),
                ('product_line', models.TextField()),
                ('service_line', models.TextField()),
                ('payment_method', tinymce.models.HTMLField(blank=True, null=True)),
                ('footer', tinymce.models.HTMLField(blank=True, null=True)),
                ('page_layout', models.CharField(choices=[('Landscape', 'Landscape'), ('Portrait', 'Portrait')], default='Landscape', max_length=50)),
                ('margin_left', models.IntegerField(default=1)),
                ('margin_right', models.IntegerField(default=1)),
                ('margin_top', models.IntegerField(default=1)),
                ('margin_bottom', models.IntegerField(default=1)),
                ('margin_header', models.IntegerField(default=1)),
                ('margin_footer', models.IntegerField(default=1)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.CharField(choices=[('TRUE', 'TRUE'), ('FALSE', 'FALSE')], default='FALSE', max_length=5)),
                ('change_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quote_template_change_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'quote_template',
            },
        ),
        migrations.CreateModel(
            name='quotes',
            fields=[
                ('quote_id', models.AutoField(primary_key=True, serialize=False)),
                ('quote_title', models.CharField(max_length=255)),
                ('quote_valid_till', models.DateTimeField()),
                ('is_invoice', models.CharField(choices=[('TRUE', 'TRUE'), ('FALSE', 'FALSE')], default='FALSE', max_length=5)),
                ('quote_approval_status_id', models.CharField(choices=[('REJECTED', 'REJECTED'), ('DRAFT', 'DRAFT'), ('APPROVED', 'APPROVED')], default='DRAFT', max_length=10)),
                ('quote_terms', tinymce.models.HTMLField(blank=True, null=True)),
                ('customer_notes', tinymce.models.HTMLField(blank=True, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.CharField(choices=[('TRUE', 'TRUE'), ('FALSE', 'FALSE')], default='FALSE', max_length=5)),
                ('change_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quotes_change_user', to=settings.AUTH_USER_MODEL)),
                ('customer_id', models.ForeignKey(blank=True, db_column='customer_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='NearBeach.customers')),
                ('opportunity_id', models.ForeignKey(blank=True, db_column='opportunity_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='NearBeach.opportunity')),
                ('organisation_id', models.ForeignKey(blank=True, db_column='organisations_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='NearBeach.organisations')),
                ('project_id', models.ForeignKey(blank=True, db_column='project_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='NearBeach.project')),
                ('quote_stage_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='NearBeach.list_of_quote_stages')),
            ],
            options={
                'db_table': 'quotes',
            },
        ),
        migrations.CreateModel(
            name='quotes_products_and_services',
            fields=[
                ('quotes_products_and_services_id', models.AutoField(primary_key=True, serialize=False)),
                ('product_price', models.DecimalField(decimal_places=2, max_digits=19)),
                ('quantity', models.IntegerField()),
                ('product_description', models.CharField(blank=True, max_length=255, null=True)),
                ('product_cost', models.DecimalField(decimal_places=2, max_digits=19)),
                ('discount_choice', models.CharField(choices=[('Percentage', 'Percentage'), ('Amount', 'Amount')], default='PERCENTAGE', max_length=10)),
                ('discount_percent', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)])),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0, max_digits=19, validators=[django.core.validators.MaxValueValidator(1000000000), django.core.validators.MinValueValidator(0)])),
                ('sales_price', models.DecimalField(decimal_places=2, default=0, max_digits=19, validators=[django.core.validators.MaxValueValidator(1000000000), django.core.validators.MinValueValidator(0)])),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0, max_digits=19)),
                ('total', models.DecimalField(decimal_places=2, max_digits=19, validators=[django.core.validators.MaxValueValidator(99999999999999999999L), django.core.validators.MinValueValidator(-99999999999999999999L)])),
                ('product_note', models.CharField(blank=True, max_length=255, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.CharField(choices=[('TRUE', 'TRUE'), ('FALSE', 'FALSE')], default='FALSE', max_length=5)),
                ('change_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quotes_products_and_services_change_user', to=settings.AUTH_USER_MODEL)),
                ('products_and_services', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='NearBeach.products_and_services')),
                ('quote', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='NearBeach.quotes')),
                ('tax', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='NearBeach.list_of_taxes')),
            ],
            options={
                'db_table': 'quotes_products_and_services',
            },
        ),
        migrations.CreateModel(
            name='requirement_item',
            fields=[
                ('requirement_item_id', models.AutoField(primary_key=True, serialize=False)),
                ('requirement_item_title', models.CharField(max_length=255)),
                ('requirement_item_scope', models.TextField(blank=True, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.CharField(choices=[('TRUE', 'TRUE'), ('FALSE', 'FALSE')], default='FALSE', max_length=5)),
                ('change_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requirement_item_change_user', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'requirement_item',
            },
        ),
        migrations.CreateModel(
            name='requirement_item_links',
            fields=[
                ('requirement_item_links_id', models.AutoField(primary_key=True, serialize=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.CharField(choices=[('TRUE', 'TRUE'), ('FALSE', 'FALSE')], default='FALSE', max_length=5)),
                ('change_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requirement_item_links_change_user', to=settings.AUTH_USER_MODEL)),
                ('organisations_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='NearBeach.organisations')),
                ('project_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='NearBeach.project')),
                ('requirement_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='NearBeach.requirement_item')),
            ],
            options={
                'db_table': 'requirement_item_permissions',
            },
        ),
        migrations.CreateModel(
            name='requirement_links',
            fields=[
                ('requirement_links_id', models.AutoField(primary_key=True, serialize=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.CharField(choices=[('TRUE', 'TRUE'), ('FALSE', 'FALSE')], default='FALSE', max_length=5)),
                ('change_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requirement_links_change_user', to=settings.AUTH_USER_MODEL)),
                ('organisations_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='NearBeach.organisations')),
                ('project_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='NearBeach.project')),
            ],
            options={
                'db_table': 'requirement_permissions',
            },
        ),
        migrations.CreateModel(
            name='requirement_permissions',
            fields=[
                ('requirement_permissions_id', models.AutoField(primary_key=True, serialize=False)),
                ('all_users', models.CharField(choices=[('TRUE', 'TRUE'), ('FALSE', 'FALSE')], default='FALSE', max_length=5)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.CharField(choices=[('TRUE', 'TRUE'), ('FALSE', 'FALSE')], default='FALSE', max_length=5)),
                ('assigned_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='requirement_permissions_assigned_user', to=settings.AUTH_USER_MODEL)),
                ('change_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requirement_permissions_change_user', to=settings.AUTH_USER_MODEL)),
                ('groups_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='NearBeach.groups')),
            ],
            options={
                'db_table': 'requirement_permission',
            },
        ),
        migrations.CreateModel(
            name='requirements',
            fields=[
                ('requirement_id', models.AutoField(primary_key=True, serialize=False)),
                ('requirement_title', models.CharField(max_length=255)),
                ('requirement_scope', tinymce.models.HTMLField(blank=True, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.CharField(choices=[('TRUE', 'TRUE'), ('FALSE', 'FALSE')], default='FALSE', max_length=5)),
                ('change_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requirements_change_user', to=settings.AUTH_USER_MODEL)),
                ('requirement_status', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='NearBeach.list_of_requirement_status')),
                ('requirement_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='NearBeach.list_of_requirement_type')),
            ],
            options={
                'db_table': 'requirements',
            },
        ),
        migrations.CreateModel(
            name='stages',
            fields=[
                ('stages_id', models.AutoField(primary_key=True, serialize=False)),
                ('stage', models.CharField(max_length=45)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.CharField(choices=[('TRUE', 'TRUE'), ('FALSE', 'FALSE')], default='FALSE', max_length=5)),
                ('change_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stages_change_user', to=settings.AUTH_USER_MODEL)),
                ('group_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='NearBeach.groups')),
            ],
            options={
                'db_table': 'stages',
            },
        ),
        migrations.CreateModel(
            name='tasks',
            fields=[
                ('tasks_id', models.AutoField(primary_key=True, serialize=False)),
                ('task_short_description', models.CharField(max_length=255)),
                ('task_long_description', tinymce.models.HTMLField()),
                ('task_start_date', models.DateTimeField()),
                ('task_end_date', models.DateTimeField()),
                ('task_status', models.CharField(choices=[('New', 'New'), ('Open', 'Open'), ('Resolved', 'Resolved'), ('Closed', 'Closed')], default='New', max_length=15)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.CharField(choices=[('TRUE', 'TRUE'), ('FALSE', 'FALSE')], default='FALSE', max_length=5)),
                ('change_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks_change_user', to=settings.AUTH_USER_MODEL)),
                ('organisations_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='NearBeach.organisations')),
                ('task_assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'tasks',
            },
        ),
        migrations.CreateModel(
            name='tasks_actions',
            fields=[
                ('tasks_actions_id', models.AutoField(primary_key=True, serialize=False)),
                ('task_action', models.TextField()),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.CharField(choices=[('TRUE', 'TRUE'), ('FALSE', 'FALSE')], default='FALSE', max_length=5)),
                ('change_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks_actions_change_user', to=settings.AUTH_USER_MODEL)),
                ('submitted_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('tasks_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='NearBeach.tasks')),
            ],
            options={
                'db_table': 'tasks_actions',
            },
        ),
        migrations.CreateModel(
            name='tasks_customers',
            fields=[
                ('tasks_customers_id', models.AutoField(primary_key=True, serialize=False)),
                ('customers_description', models.CharField(blank=True, max_length=155, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.CharField(choices=[('TRUE', 'TRUE'), ('FALSE', 'FALSE')], default='FALSE', max_length=5)),
                ('change_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks_customers_change_user', to=settings.AUTH_USER_MODEL)),
                ('customer_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='NearBeach.customers')),
                ('tasks_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='NearBeach.tasks')),
            ],
            options={
                'db_table': 'tasks_customers',
            },
        ),
        migrations.CreateModel(
            name='tasks_groups',
            fields=[
                ('tasks_groups_id', models.AutoField(primary_key=True, serialize=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.CharField(choices=[('TRUE', 'TRUE'), ('FALSE', 'FALSE')], default='FALSE', max_length=5)),
                ('change_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks_groups_change_user', to=settings.AUTH_USER_MODEL)),
                ('groups_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='NearBeach.groups')),
                ('tasks_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='NearBeach.tasks')),
            ],
            options={
                'db_table': 'tasks_groups',
            },
        ),
        migrations.CreateModel(
            name='tasks_history',
            fields=[
                ('tasks_history_id', models.AutoField(primary_key=True, serialize=False)),
                ('user_infomation', models.CharField(max_length=255)),
                ('task_history', models.TextField()),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.CharField(choices=[('TRUE', 'TRUE'), ('FALSE', 'FALSE')], default='FALSE', max_length=5)),
                ('change_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks_history_change_user', to=settings.AUTH_USER_MODEL)),
                ('tasks_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='NearBeach.tasks')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'tasks_history',
            },
        ),
        migrations.CreateModel(
            name='tasks_opportunity',
            fields=[
                ('tasks_opportunity_id', models.AutoField(primary_key=True, serialize=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.CharField(choices=[('TRUE', 'TRUE'), ('FALSE', 'FALSE')], default='FALSE', max_length=5)),
                ('change_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks_opportunity_change_user', to=settings.AUTH_USER_MODEL)),
                ('opportunity_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='NearBeach.opportunity')),
                ('tasks_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='NearBeach.tasks')),
            ],
            options={
                'db_table': 'tasks_opportunity',
            },
        ),
        migrations.CreateModel(
            name='to_do',
            fields=[
                ('to_do_id', models.AutoField(primary_key=True, serialize=False)),
                ('to_do', models.CharField(max_length=255)),
                ('to_do_completed', models.BooleanField(default=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.CharField(choices=[('TRUE', 'TRUE'), ('FALSE', 'FALSE')], default='FALSE', max_length=5)),
                ('change_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='to_do_change_user', to=settings.AUTH_USER_MODEL)),
                ('opportunity', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='NearBeach.opportunity')),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='NearBeach.project')),
                ('tasks', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='NearBeach.tasks')),
            ],
            options={
                'db_table': 'to_do',
            },
        ),
        migrations.CreateModel(
            name='user_groups',
            fields=[
                ('user_groups_id', models.AutoField(primary_key=True, serialize=False)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_modified', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.CharField(choices=[('TRUE', 'TRUE'), ('FALSE', 'FALSE')], default='FALSE', max_length=5)),
                ('change_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_groups_change_user', to=settings.AUTH_USER_MODEL)),
                ('groups', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='NearBeach.groups')),
                ('permission_set', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='NearBeach.permission_set')),
                ('username', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_groups',
            },
        ),
        migrations.AddField(
            model_name='requirement_permissions',
            name='requirements',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='NearBeach.requirements'),
        ),
        migrations.AddField(
            model_name='requirement_links',
            name='requirements',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='NearBeach.requirements'),
        ),
        migrations.AddField(
            model_name='requirement_links',
            name='task_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='NearBeach.tasks'),
        ),
        migrations.AddField(
            model_name='requirement_item_links',
            name='task_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='NearBeach.tasks'),
        ),
        migrations.AddField(
            model_name='requirement_item',
            name='requirement_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='NearBeach.requirements'),
        ),
        migrations.AddField(
            model_name='requirement_item',
            name='requirement_item_status',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='NearBeach.list_of_requirement_item_status'),
        ),
        migrations.AddField(
            model_name='requirement_item',
            name='requirement_item_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='NearBeach.list_of_requirement_item_type'),
        ),
        migrations.AddField(
            model_name='quotes',
            name='task_id',
            field=models.ForeignKey(blank=True, db_column='task_id', null=True, on_delete=django.db.models.deletion.CASCADE, to='NearBeach.tasks'),
        ),
        migrations.AddField(
            model_name='quote_responsible_customers',
            name='quote_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='NearBeach.quotes'),
        ),
        migrations.AddField(
            model_name='project_tasks',
            name='task_id',
            field=models.ForeignKey(db_column='task_id', on_delete=django.db.models.deletion.CASCADE, to='NearBeach.tasks'),
        ),
        migrations.AddField(
            model_name='project_stages',
            name='stages_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='NearBeach.stages'),
        ),
        migrations.AddField(
            model_name='opportunity',
            name='organisations_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='NearBeach.organisations'),
        ),
        migrations.AddField(
            model_name='opportunity',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='kanban_card',
            name='kanban_column',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='NearBeach.kanban_column'),
        ),
        migrations.AddField(
            model_name='kanban_card',
            name='kanban_level',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='NearBeach.kanban_level'),
        ),
        migrations.AddField(
            model_name='kanban_card',
            name='project',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='NearBeach.project'),
        ),
        migrations.AddField(
            model_name='kanban_card',
            name='requirements',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='NearBeach.requirements'),
        ),
        migrations.AddField(
            model_name='kanban_card',
            name='tasks',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='NearBeach.tasks'),
        ),
        migrations.AddField(
            model_name='kanban_board',
            name='requirements',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='NearBeach.requirements'),
        ),
        migrations.AddField(
            model_name='group_permissions',
            name='groups',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='NearBeach.groups'),
        ),
        migrations.AddField(
            model_name='group_permissions',
            name='permission_set',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='NearBeach.permission_set'),
        ),
        migrations.AddField(
            model_name='folders',
            name='project_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='NearBeach.project'),
        ),
        migrations.AddField(
            model_name='folders',
            name='task_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='NearBeach.tasks'),
        ),
        migrations.AddField(
            model_name='email_contact',
            name='email_content',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='NearBeach.email_content'),
        ),
        migrations.AddField(
            model_name='email_contact',
            name='opportunity',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='NearBeach.opportunity'),
        ),
        migrations.AddField(
            model_name='email_contact',
            name='organisations',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='NearBeach.organisations'),
        ),
        migrations.AddField(
            model_name='email_contact',
            name='project',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='NearBeach.project'),
        ),
        migrations.AddField(
            model_name='email_contact',
            name='quotes',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='NearBeach.quotes'),
        ),
        migrations.AddField(
            model_name='email_contact',
            name='tasks',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='NearBeach.tasks'),
        ),
        migrations.AddField(
            model_name='email_contact',
            name='to_customers',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='email_contact_to_customers', to='NearBeach.customers'),
        ),
        migrations.AddField(
            model_name='documents_folder',
            name='folder_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='NearBeach.folders'),
        ),
        migrations.AddField(
            model_name='document_permissions',
            name='document_key',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='NearBeach.documents'),
        ),
        migrations.AddField(
            model_name='document_permissions',
            name='opportunity_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='NearBeach.opportunity'),
        ),
        migrations.AddField(
            model_name='document_permissions',
            name='organisations_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='NearBeach.organisations'),
        ),
        migrations.AddField(
            model_name='document_permissions',
            name='project_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='NearBeach.project'),
        ),
        migrations.AddField(
            model_name='document_permissions',
            name='requirement_item',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='NearBeach.requirement_item'),
        ),
        migrations.AddField(
            model_name='document_permissions',
            name='requirements',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='NearBeach.requirements'),
        ),
        migrations.AddField(
            model_name='document_permissions',
            name='task_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='NearBeach.tasks'),
        ),
        migrations.AddField(
            model_name='document_permissions',
            name='user_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='customers',
            name='customer_title',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='NearBeach.list_of_titles'),
        ),
        migrations.AddField(
            model_name='customers',
            name='organisations_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='NearBeach.organisations'),
        ),
        migrations.AddField(
            model_name='costs',
            name='project_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='NearBeach.project'),
        ),
        migrations.AddField(
            model_name='costs',
            name='task_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='NearBeach.tasks'),
        ),
        migrations.AddField(
            model_name='contact_history',
            name='contact_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='NearBeach.list_of_contact_types'),
        ),
        migrations.AddField(
            model_name='contact_history',
            name='customer_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='NearBeach.customers'),
        ),
        migrations.AddField(
            model_name='contact_history',
            name='document_key',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='NearBeach.documents'),
        ),
        migrations.AddField(
            model_name='contact_history',
            name='organisations_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='NearBeach.organisations'),
        ),
        migrations.AddField(
            model_name='contact_history',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='campus',
            name='campus_country_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='NearBeach.list_of_countries'),
        ),
        migrations.AddField(
            model_name='campus',
            name='campus_region_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='NearBeach.list_of_countries_regions'),
        ),
        migrations.AddField(
            model_name='campus',
            name='change_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='campus_change_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='campus',
            name='customers',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='NearBeach.customers'),
        ),
        migrations.AddField(
            model_name='campus',
            name='organisations_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='NearBeach.organisations'),
        ),
        migrations.AddField(
            model_name='bug_client',
            name='list_of_bug_client',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='NearBeach.list_of_bug_client'),
        ),
        migrations.AddField(
            model_name='bug',
            name='bug_client',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='NearBeach.bug_client'),
        ),
        migrations.AddField(
            model_name='bug',
            name='change_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bug_change_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='bug',
            name='project',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='NearBeach.project'),
        ),
        migrations.AddField(
            model_name='bug',
            name='requirements',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='NearBeach.requirements'),
        ),
        migrations.AddField(
            model_name='bug',
            name='tasks',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='NearBeach.tasks'),
        ),
        migrations.AddField(
            model_name='assigned_users',
            name='opportunity_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='NearBeach.opportunity'),
        ),
        migrations.AddField(
            model_name='assigned_users',
            name='project_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='NearBeach.project'),
        ),
        migrations.AddField(
            model_name='assigned_users',
            name='task_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='NearBeach.tasks'),
        ),
        migrations.AddField(
            model_name='assigned_users',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
